@page
@model PhamNguyenTrongTuanRazorPages.Pages.Account.IndexModel

@{
    ViewData["Title"] = "Account Management";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<div class="d-flex justify-content-between align-items-center">
    <h1>@ViewData["Title"]</h1>
    <form class="form-inline my-2 my-lg-0 d-flex w-25" asp-page="/Account/Index" method="get">
        <input class="form-control mr-sm-2" type="text" placeholder="Search name or email" aria-label="Search" name="searchString" value="@ViewData["CurrentFilter"]" />
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
</div>


<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="/Account/Index" asp-route-sortOrder="@ViewData["NameSortParam"]">
                    @Html.DisplayNameFor(model => model.SystemAccount[0].AccountName)
                </a>
            </th>
            <th>
                <a asp-page="/Account/Index" asp-route-sortOrder="@ViewData["EmailSortParam"]">
                    @Html.DisplayNameFor(model => model.SystemAccount[0].AccountEmail)
                </a>
            </th>
            <th>
                <a asp-page="/Account/Index" asp-route-sortOrder="@ViewData["RoleSortParam"]">
                    @Html.DisplayNameFor(model => model.SystemAccount[0].AccountRole)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SystemAccount)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountRole)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.AccountId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.AccountId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.AccountId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="pagination">
    <ul class="pagination">
        <li class="page-item @(!Model.SystemAccount.HasPreviousPage ? "disabled" : "")">
            <a class="page-link"
            asp-page="./Index"
               aria-disabled="@(!Model.SystemAccount.HasPreviousPage ? "true" : "false")"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            asp-route-pageNumber="@(Model.SystemAccount.PageIndex - 1)"

            >
                Previous
            </a>
        </li>

        @for(var i = 1; i <= Model.SystemAccount.TotalPages; i++)
        {
            <li class="page-item @(i == Model.SystemAccount.PageIndex ? "active" : "")" aria-current="page">
                <a class="page-link"
                   asp-page="./Index"
                   aria-current="@(i == Model.SystemAccount.PageIndex ? "page" : "")"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-pageNumber="@i"
                >@i</a>
            </li>
        }

        <li class="page-item @(!Model.SystemAccount.HasNextPage ? "disabled" : "")">
            <a class="page-link"
               asp-page="./Index"
               aria-disabled="@(!Model.SystemAccount.HasNextPage ? "true" : "false")"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-pageNumber="@(Model.SystemAccount.PageIndex + 1)">
                Next
            </a>
        </li>
    </ul>
</nav>
